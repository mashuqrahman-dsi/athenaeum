/*
 * This file is generated by jOOQ.
*/
package com.mashuq.athenaeum.domain.athenaeum.tables.records;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import com.mashuq.athenaeum.domain.athenaeum.tables.Information;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = {"http://www.jooq.org",
		"jOOQ version:3.10.5"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class InformationRecord extends UpdatableRecordImpl<InformationRecord>
		implements
			Record5<Integer, Integer, String, String, String> {

	private static final long serialVersionUID = -1691788793;

	/**
	 * Setter for <code>ATHENAEUM.INFORMATION.INFORMATIONID</code>.
	 */
	public void setInformationid(Integer value) {
		set(0, value);
	}

	/**
	 * Getter for <code>ATHENAEUM.INFORMATION.INFORMATIONID</code>.
	 */
	public Integer getInformationid() {
		return (Integer) get(0);
	}

	/**
	 * Setter for <code>ATHENAEUM.INFORMATION.REQUESTID</code>.
	 */
	public void setRequestid(Integer value) {
		set(1, value);
	}

	/**
	 * Getter for <code>ATHENAEUM.INFORMATION.REQUESTID</code>.
	 */
	public Integer getRequestid() {
		return (Integer) get(1);
	}

	/**
	 * Setter for <code>ATHENAEUM.INFORMATION.REFERENCE</code>.
	 */
	public void setReference(String value) {
		set(2, value);
	}

	/**
	 * Getter for <code>ATHENAEUM.INFORMATION.REFERENCE</code>.
	 */
	public String getReference() {
		return (String) get(2);
	}

	/**
	 * Setter for <code>ATHENAEUM.INFORMATION.STATUS</code>.
	 */
	public void setStatus(String value) {
		set(3, value);
	}

	/**
	 * Getter for <code>ATHENAEUM.INFORMATION.STATUS</code>.
	 */
	public String getStatus() {
		return (String) get(3);
	}

	/**
	 * Setter for <code>ATHENAEUM.INFORMATION.DATA</code>.
	 */
	public void setData(String value) {
		set(4, value);
	}

	/**
	 * Getter for <code>ATHENAEUM.INFORMATION.DATA</code>.
	 */
	public String getData() {
		return (String) get(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, String, String, String> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, String, String, String> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Information.INFORMATION.INFORMATIONID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Information.INFORMATION.REQUESTID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Information.INFORMATION.REFERENCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Information.INFORMATION.STATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Information.INFORMATION.DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer component1() {
		return getInformationid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer component2() {
		return getRequestid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String component3() {
		return getReference();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String component4() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String component5() {
		return getData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getInformationid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getRequestid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getReference();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InformationRecord value1(Integer value) {
		setInformationid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InformationRecord value2(Integer value) {
		setRequestid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InformationRecord value3(String value) {
		setReference(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InformationRecord value4(String value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InformationRecord value5(String value) {
		setData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InformationRecord values(Integer value1, Integer value2,
			String value3, String value4, String value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached InformationRecord
	 */
	public InformationRecord() {
		super(Information.INFORMATION);
	}

	/**
	 * Create a detached, initialised InformationRecord
	 */
	public InformationRecord(Integer informationid, Integer requestid,
			String reference, String status, String data) {
		super(Information.INFORMATION);

		set(0, informationid);
		set(1, requestid);
		set(2, reference);
		set(3, status);
		set(4, data);
	}
}
