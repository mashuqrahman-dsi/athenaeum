/*
 * This file is generated by jOOQ.
*/
package com.mashuq.athenaeum.domain.athenaeum.tables;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import com.mashuq.athenaeum.domain.athenaeum.Athenaeum;
import com.mashuq.athenaeum.domain.athenaeum.Indexes;
import com.mashuq.athenaeum.domain.athenaeum.Keys;
import com.mashuq.athenaeum.domain.athenaeum.tables.records.RequestRecord;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = {"http://www.jooq.org",
		"jOOQ version:3.10.5"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Request extends TableImpl<RequestRecord> {

	private static final long serialVersionUID = 2110370815;

	/**
	 * The reference instance of <code>ATHENAEUM.REQUEST</code>
	 */
	public static final Request REQUEST = new Request();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RequestRecord> getRecordType() {
		return RequestRecord.class;
	}

	/**
	 * The column <code>ATHENAEUM.REQUEST.REQUESTID</code>.
	 */
	public final TableField<RequestRecord, Integer> REQUESTID = createField(
			"REQUESTID",
			org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true),
			this, "");

	/**
	 * The column <code>ATHENAEUM.REQUEST.BOOKID</code>.
	 */
	public final TableField<RequestRecord, Integer> BOOKID = createField(
			"BOOKID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this,
			"");

	/**
	 * The column <code>ATHENAEUM.REQUEST.STATUS</code>.
	 */
	public final TableField<RequestRecord, String> STATUS = createField(
			"STATUS", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false),
			this, "");

	/**
	 * Create a <code>ATHENAEUM.REQUEST</code> table reference
	 */
	public Request() {
		this(DSL.name("REQUEST"), null);
	}

	/**
	 * Create an aliased <code>ATHENAEUM.REQUEST</code> table reference
	 */
	public Request(String alias) {
		this(DSL.name(alias), REQUEST);
	}

	/**
	 * Create an aliased <code>ATHENAEUM.REQUEST</code> table reference
	 */
	public Request(Name alias) {
		this(alias, REQUEST);
	}

	private Request(Name alias, Table<RequestRecord> aliased) {
		this(alias, aliased, null);
	}

	private Request(Name alias, Table<RequestRecord> aliased,
			Field<?>[] parameters) {
		super(alias, null, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Schema getSchema() {
		return Athenaeum.ATHENAEUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Index> getIndexes() {
		return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_6,
				Indexes.PRIMARY_KEY_6);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RequestRecord, Integer> getIdentity() {
		return Keys.IDENTITY_REQUEST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RequestRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_6C;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RequestRecord>> getKeys() {
		return Arrays.<UniqueKey<RequestRecord>>asList(Keys.CONSTRAINT_6C);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RequestRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RequestRecord, ?>>asList(Keys.CONSTRAINT_6);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Request as(String alias) {
		return new Request(DSL.name(alias), this);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Request as(Name alias) {
		return new Request(alias, this);
	}

	/**
	 * Rename this table
	 */
	@Override
	public Request rename(String name) {
		return new Request(DSL.name(name), null);
	}

	/**
	 * Rename this table
	 */
	@Override
	public Request rename(Name name) {
		return new Request(name, null);
	}
}
