/*
 * This file is generated by jOOQ.
*/
package com.mashuq.athenaeum.domain.athenaeum.tables.records;


import com.mashuq.athenaeum.domain.athenaeum.tables.Request;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequestRecord extends UpdatableRecordImpl<RequestRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = -1231350566;

    /**
     * Setter for <code>ATHENAEUM.REQUEST.REQUESTID</code>.
     */
    public void setRequestid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ATHENAEUM.REQUEST.REQUESTID</code>.
     */
    public Integer getRequestid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ATHENAEUM.REQUEST.BOOKID</code>.
     */
    public void setBookid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>ATHENAEUM.REQUEST.BOOKID</code>.
     */
    public Integer getBookid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>ATHENAEUM.REQUEST.STATUS</code>.
     */
    public void setStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ATHENAEUM.REQUEST.STATUS</code>.
     */
    public String getStatus() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Request.REQUEST.REQUESTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Request.REQUEST.BOOKID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Request.REQUEST.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getRequestid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getBookid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRequestid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getBookid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestRecord value1(Integer value) {
        setRequestid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestRecord value2(Integer value) {
        setBookid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestRecord value3(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RequestRecord
     */
    public RequestRecord() {
        super(Request.REQUEST);
    }

    /**
     * Create a detached, initialised RequestRecord
     */
    public RequestRecord(Integer requestid, Integer bookid, String status) {
        super(Request.REQUEST);

        set(0, requestid);
        set(1, bookid);
        set(2, status);
    }
}
